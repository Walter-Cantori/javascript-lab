var cov_2d5dg3gf0f=function(){var path="/Users/wrlc/dev/playground/node/goNode/mod2_apiRest/app/controllers/usersController.js",hash="cdd5f0ca3572fa03dac1e39e1fee8ead3f1cba71",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/wrlc/dev/playground/node/goNode/mod2_apiRest/app/controllers/usersController.js",statementMap:{"0":{start:{line:1,column:17},end:{line:1,column:36}},"1":{start:{line:3,column:13},end:{line:3,column:35}},"2":{start:{line:4,column:14},end:{line:4,column:37}},"3":{start:{line:6,column:0},end:{line:69,column:2}},"4":{start:{line:8,column:4},end:{line:20,column:5}},"5":{start:{line:9,column:19},end:{line:9,column:50}},"6":{start:{line:10,column:25},end:{line:10,column:68}},"7":{start:{line:12,column:6},end:{line:17,column:9}},"8":{start:{line:19,column:6},end:{line:19,column:23}},"9":{start:{line:24,column:4},end:{line:38,column:5}},"10":{start:{line:25,column:19},end:{line:25,column:50}},"11":{start:{line:26,column:28},end:{line:26,column:32}},"12":{start:{line:28,column:21},end:{line:33,column:27}},"13":{start:{line:35,column:6},end:{line:35,column:30}},"14":{start:{line:37,column:6},end:{line:37,column:23}},"15":{start:{line:42,column:4},end:{line:67,column:5}},"16":{start:{line:43,column:17},end:{line:43,column:27}},"17":{start:{line:50,column:10},end:{line:50,column:18}},"18":{start:{line:52,column:6},end:{line:54,column:7}},"19":{start:{line:53,column:8},end:{line:53,column:92}},"20":{start:{line:56,column:19},end:{line:56,column:86}},"21":{start:{line:59,column:6},end:{line:62,column:7}},"22":{start:{line:60,column:8},end:{line:60,column:33}},"23":{start:{line:61,column:8},end:{line:61,column:26}},"24":{start:{line:64,column:6},end:{line:64,column:28}},"25":{start:{line:66,column:6},end:{line:66,column:23}}},fnMap:{},branchMap:{"0":{loc:{start:{line:52,column:6},end:{line:54,column:7}},type:"if",locations:[{start:{line:52,column:6},end:{line:54,column:7}},{start:{line:52,column:6},end:{line:54,column:7}}],line:52},"1":{loc:{start:{line:52,column:10},end:{line:52,column:50}},type:"binary-expr",locations:[{start:{line:52,column:10},end:{line:52,column:18}},{start:{line:52,column:22},end:{line:52,column:50}}],line:52},"2":{loc:{start:{line:59,column:6},end:{line:62,column:7}},type:"if",locations:[{start:{line:59,column:6},end:{line:62,column:7}},{start:{line:59,column:6},end:{line:62,column:7}}],line:59}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},f:{},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const mongoose=(cov_2d5dg3gf0f.s[0]++,require('mongoose'));const User=(cov_2d5dg3gf0f.s[1]++,mongoose.model('User'));const Tweet=(cov_2d5dg3gf0f.s[2]++,mongoose.model('Tweet'));cov_2d5dg3gf0f.s[3]++;module.exports={async show(req,res,next){cov_2d5dg3gf0f.s[4]++;try{const user=(cov_2d5dg3gf0f.s[5]++,await User.findById(req.userId));const tweetCount=(cov_2d5dg3gf0f.s[6]++,await Tweet.find({user:user.id}).count());cov_2d5dg3gf0f.s[7]++;return res.json({user,tweetCount,followersCount:user.followers.length,followingCount:user.following.length});}catch(err){cov_2d5dg3gf0f.s[8]++;return next(err);}},async feed(req,res,next){cov_2d5dg3gf0f.s[9]++;try{const user=(cov_2d5dg3gf0f.s[10]++,await User.findById(req.userId));const{following}=(cov_2d5dg3gf0f.s[11]++,user);const tweets=(cov_2d5dg3gf0f.s[12]++,await Tweet.find({user:{$in:[user.id,...following]}}).limit(50).sort('-createdAt'));cov_2d5dg3gf0f.s[13]++;return res.json(tweets);}catch(err){cov_2d5dg3gf0f.s[14]++;return next(err);}},async update(req,res,next){cov_2d5dg3gf0f.s[15]++;try{const id=(cov_2d5dg3gf0f.s[16]++,req.userId);const{name,username,password,confirmPassword}=(cov_2d5dg3gf0f.s[17]++,req.body);cov_2d5dg3gf0f.s[18]++;if((cov_2d5dg3gf0f.b[1][0]++,password)&&(cov_2d5dg3gf0f.b[1][1]++,password!==confirmPassword)){cov_2d5dg3gf0f.b[0][0]++;cov_2d5dg3gf0f.s[19]++;return res.status(400).json({error:'Password and Confirm Password don`t match'});}else{cov_2d5dg3gf0f.b[0][1]++;}const user=(cov_2d5dg3gf0f.s[20]++,await User.findByIdAndUpdate(id,{name,username},{new:true}));// using save method so the schema hooks will be triggered and password encrypted
cov_2d5dg3gf0f.s[21]++;if(password){cov_2d5dg3gf0f.b[2][0]++;cov_2d5dg3gf0f.s[22]++;user.password=password;cov_2d5dg3gf0f.s[23]++;await user.save();}else{cov_2d5dg3gf0f.b[2][1]++;}cov_2d5dg3gf0f.s[24]++;return res.json(user);}catch(err){cov_2d5dg3gf0f.s[25]++;return next(err);}}};